---
name: Main

on:
  pull_request:
    types: [opened, ready_for_review, reopened, synchronize]
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

defaults:
  run:
    shell: 'bash -Eeuo pipefail {0}'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - id: configure-cache
        name: Configure cache
        env:
          # This must be updated if the pnpm store path changes
          PNPM_SETUP_STORE_PATH: ~/setup-pnpm/node_modules/.bin/store/v3
        run: |
          pnpm_store_path="$PNPM_SETUP_STORE_PATH"
          if [ `which pnpm` ]; then
            pnpm_store_path="$(pnpm store path --silent)"
          fi
          if [ -z "pnpm_store_path" ]; then
            echo "Failed to get pnpm store path"
            exit 1
          fi
          mkdir -p "pnpm_store_path" || exit 1
          echo "path=$pnpm_store_path" >> $GITHUB_OUTPUT
          year_month=$(date -u '+%Y%m')
          base_key="${{ runner.os }}-pnpm-cache-v${year_month}"
          echo "key=${base_key}-${{ hashFiles('**/pnpm-lock.yaml') }}" >> $GITHUB_OUTPUT
          echo "restore-keys=${base_key}-" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          key: ${{ steps.configure-cache.outputs.key }}
          path: ${{ steps.configure-cache.outputs.path }}
          restore-keys: ${{ steps.configure-cache.outputs.restore-keys }}

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          run_install: |
            - args: [--frozen-lockfile, --prefer-offline, --loglevel, error]

      - name: Lint
        run: pnpm run lint

      - name: Run Tests
        run: pnpm run test:coverage

      - name: Build
        run: pnpm run build

      - if: github.ref =='refs/heads/main'
        name: Upload Artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: dist

  deploy:
    concurrency:
      group: pages
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deploy-to-pages.outputs.page_url }}
    if: github.ref =='refs/heads/main'
    name: Deploy
    needs: build
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5

      - name: Deploy to GitHub Pages
        id: deploy-to-pages
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
